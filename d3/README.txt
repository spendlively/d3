
/////////////////////////////////////////////////////////////////////////
////////////////////////////////ССЫЛКИ///////////////////////////////////
/////////////////////////////////////////////////////////////////////////
Введение в D3
https://habrahabr.ru/company/datalaboratory/blog/217905/

D3. Краткое руководство
http://serganbus.github.io/d3tutorials/index.html

D3.js. Визуализация графов
https://habrahabr.ru/post/302968/

Простые графики с помощью D3.js
https://habrahabr.ru/post/303834/

API Reference (русскоязычная версия)
https://github.com/d3/d3/wiki/API-Reference-(%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%BE%D1%8F%D0%B7%D1%8B%D1%87%D0%BD%D0%B0%D1%8F-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F)

Визуализация данных в браузере с помощью D3.js / Михаил Дунаев (Rambler&Co)
https://www.slideshare.net/profyclub_ru/d3js-ramblerco

loftblog - Введение в Data-Driven Documents ( d3.js )
https://www.youtube.com/watch?v=dPaZe7a2ZH0&t=827s

GeekBrains - D3.js – визуализируй свои идеи!
https://www.youtube.com/watch?v=NZp6yeUWyGY&t=5s





//Классы
d3.layout.tree
d3.svg.diagonal

//Методы
d3.select
d3.json





///////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////SVG///////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
Яндекс - 005. Приручаем SVG – Лев Солнцев
https://www.youtube.com/watch?v=2DRu77MC6Ns

Яндекс - 018. SVG – Артем Кувалдин
https://www.youtube.com/watch?v=avSrOFCWraA

Специалист - Формат SVG: от иконок до живых картин
https://www.youtube.com/watch?v=ORO-g_q_XB8

loftblog - Работа с векторной графикой SVG
https://www.youtube.com/watch?v=Xf0Ri2ANi54

Вебинар - Основы работы с canvas и svg
https://www.youtube.com/watch?v=DCotZpftf9Y

Вебинар - uwebdesign -SVG анимации — CSS, SMIL и Snap.svg
https://www.youtube.com/watch?v=meD4fFX9jKQ





///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////МАСШТАБИРОВАНИЕ//////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
Масштабирующая функция
 - получает на вход диапазон допустимых входных значений
 - возвращает диапазон возможных выходных значений (обычно используемый для выхода в пикселах)

Нормализация
 - преобразование числовых значений в новые значения в диапазоне от 0 до 1

Линеыйное масштабирование
var scale = d3.scale.linear(); //по умолчанию масштабирует 1:1
scale.domain([100, 500]); //входной диапазон
scale.range([10, 350]); //выходной диапазон
scale(100);  //возвращает 10
scale(300);  //возвращает 180
scale(500);  //возвращает 350

//Chain-стиль
var scale = d3.scale.linear()
    .domain([100, 500])
    .range([10, 350]);

//Динамическое указание пределов (d3.max и d3.min)
var dataset = [
    [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
    [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]
];
//Ось Х
var xScale = d3.scale.linear()
    .domain([0, d3.max(dataset, function(d) { return d[0]; })])
    .range([0, w]); //w - ширина нашего svg

//Ось У
var yScale = d3.scale.linear()
    .domain([0, d3.max(dataset, function(d) { return d[1]; })])
    .range([0, h]);

//Использование
.attr("cx", function(d) {
    return xScale(d[0]);
})
.attr("cy", function(d) {
    return yScale(d[1]);
})
.attr("x", function(d) {
    return xScale(d[0]);
})
.attr("y", function(d) {
    return yScale(d[1]);
})


//Другие методы d3.scale.linear()
nice() - принять все в качестве выходного диапазона и расширить этот диапазон в обе стороны до ближайшего округленного значения.
rangeRound() - используйте вместе range(), и все выходные значения масштабирующей функции будут округлены до ближайшего целого числа
clamp() -

//Другие масштабирующие функции
identity - масштаб в пропорции 1:1, в первую очередь полезно, для пиксельных величин.
sqrt - функция масштабирования квадратного корня.
pow - функция масштабирования возведения в степень.
log - логарифмическая функция масштабирования.
quantize - линейная функция масштабирования с дискретными значениями выходного диапазона.
quantile - аналогична функции выше, но дискретными значениями на входной области значений.
ordinal - порядковое масштабирование использует не количественные значения(как категории имен) на выходе; подходит для сравнения яблок с апельсинами.

